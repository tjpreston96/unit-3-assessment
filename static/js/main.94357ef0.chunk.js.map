{"version":3,"sources":["components/Circles/Circles.jsx","components/CircleSelector/CircleSelector.jsx","App.js","reportWebVitals.js","index.js"],"names":["Circles","props","className","circleNum","map","circle","idx","selectedCircleIdx","onClick","handleCircleSelection","CircleSelector","App","state","newIdx","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAmBeA,G,YAhBC,SAACC,GACf,OACE,qBAAKC,UAAU,UAAf,SACGD,EAAME,UAAUC,KAAI,SAACC,EAAQC,GAAT,OACnB,qBACEJ,UAAWD,EAAMM,oBAAsBD,EAAM,WAAa,QAE1DE,QAAS,kBAAMP,EAAMQ,sBAAsBH,IAH7C,SAKGA,EAAM,GAHFD,UCYAK,G,MAlBQ,SAACT,GACtB,OACE,qBAAKC,UAAU,iBAAf,SACGD,EAAME,UAAUC,KAAI,SAACC,EAAQC,GAAT,OACnB,wBACEJ,UAAWD,EAAMM,oBAAsBD,EAAM,WAAa,QAE1DE,QAAS,kBAAMP,EAAMQ,sBAAsBH,IAH7C,SAKGL,EAAMM,oBAAsBD,EAA5B,iBACaA,EAAM,EADnB,mCAEkBA,EAAM,IALpBD,UCLTF,EAAY,CAAC,IAAK,IAAK,IAAK,KAgCnBQ,E,4MA7BbC,MAAQ,CACNL,kBAAmB,M,EAGrBE,sBAAwB,SAACI,GACvB,EAAKC,SAAS,CAAEP,kBAAmBM,K,uDAInC,OACE,sBAAKX,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,iCACE,cAAC,EAAD,CACEO,sBAAuBM,KAAKN,sBAC5BN,UAAWA,EACXI,kBAAmBQ,KAAKH,MAAML,oBAEhC,cAAC,EAAD,CACEE,sBAAuBM,KAAKN,sBAC5BN,UAAWA,EACXI,kBAAmBQ,KAAKH,MAAML,8B,GAtBxBS,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.94357ef0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Circles.css\";\n\nconst Circles = (props) => {\n  return (\n    <div className=\"Circles\">\n      {props.circleNum.map((circle, idx) => (\n        <div\n          className={props.selectedCircleIdx === idx ? \"selected\" : \"color\"}\n          key={circle}\n          onClick={() => props.handleCircleSelection(idx)}\n        >\n          {idx + 1}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Circles;\n","import React from \"react\";\nimport \"./CircleSelector.css\";\n\nconst CircleSelector = (props) => {\n  return (\n    <div className=\"CircleSelector\">\n      {props.circleNum.map((circle, idx) => (\n        <button\n          className={props.selectedCircleIdx === idx ? \"selected\" : \"color\"}\n          key={circle}\n          onClick={() => props.handleCircleSelection(idx)}\n        >\n          {props.selectedCircleIdx === idx\n            ? `Circle ${idx + 1} Selected`\n            : `Select Taco ${idx + 1}`}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default CircleSelector;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Circles from \"./components/Circles/Circles\";\nimport CircleSelector from \"./components/CircleSelector/CircleSelector\";\nconst circleNum = [\"0\", \"1\", \"2\", \"3\"];\n\nclass App extends Component {\n  state = {\n    selectedCircleIdx: null,\n  };\n\n  handleCircleSelection = (newIdx) => {\n    this.setState({ selectedCircleIdx: newIdx });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 3 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector\n            handleCircleSelection={this.handleCircleSelection}\n            circleNum={circleNum}\n            selectedCircleIdx={this.state.selectedCircleIdx}\n          />\n          <Circles\n            handleCircleSelection={this.handleCircleSelection}\n            circleNum={circleNum}\n            selectedCircleIdx={this.state.selectedCircleIdx}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}